import{R as a}from"./index-CBqU2yxZ.js";import{f}from"./index-_wFD3GG2.js";import{I as v,J as d,K as t}from"./EditorServices-BJKHmurs.js";import{u,c as m}from"./Util-CG5_y5Pm.js";import{u as R}from"./uploadEnvMapBake-D5gCIyCQ.js";import{B as k}from"./index-CCAuFDbE.js";import{b as B}from"./index-DFU-83xN.js";import{B as y}from"./index-CGhkeU3i.js";import{I as r}from"./index-DZ02_pf3.js";import{S as s}from"./index-CmJ8aZaS.js";import{a as b}from"./index-fFxXVS77.js";import{N as C}from"./index-BXX5lIfA.js";import{u as h}from"./useTranslation-C8TD7CCW.js";const g=[{label:"Runtime",value:v.Realtime},{label:"Baked",value:v.Baked}],M=[{label:"On Awake",value:d.OnAwake}],S=[{label:"128",value:128},{label:"256",value:256},{label:"512",value:512},{label:"1024",value:1024},{label:"2048",value:2048}],$=e=>{const n=E=>e.bakeComponent[E];let l=a.createElement(a.Fragment,null);const c=e.element.label,o=e.element.propertyName;switch(e.element.type){case i.Boolean:l=a.createElement(k,{value:n(o),onChange:m(t,o)});break;case i.BakeType:l=a.createElement(s,{key:e.entity,options:g,onChange:m(t,o),value:n(o)});break;case i.RefreshMode:l=a.createElement(s,{key:e.entity,options:M,onChange:m(t,o),value:n(o)});break;case i.Resolution:l=a.createElement(s,{key:e.entity,options:S,onChange:m(t,o),value:n(o)});break;case i.Vector:l=a.createElement(b,{onChange:u(t,o),onRelease:m(t,o),value:n(o)});break;default:l=a.createElement("div",null,"Undefined value Type");break}return a.createElement(r,{name:c,label:c},l)};var i=(e=>(e[e.Boolean=0]="Boolean",e[e.BakeType=1]="BakeType",e[e.RefreshMode=2]="RefreshMode",e[e.Resolution=3]="Resolution",e[e.Vector=4]="Vector",e))(i||{});const N=[256,512,1024,2048],I={},p=e=>{const n=f(e.entity,t),{t:l}=h();return a.createElement(C,{style:I,...e,name:l("editor:properties.envmap.lbl-bake"),description:"For Adding EnvMap bake in your scene",icon:a.createElement(p.iconComponent,null)},a.createElement(y,{className:"my-1 ml-auto px-10",onClick:()=>R(e.entity)},l("editor.projects.bake")),a.createElement(r,{name:"Position",label:"Position Offset",className:"w-auto"},a.createElement(b,{value:n.bakePositionOffset.value,onChange:u(t,"bakePositionOffset"),onRelease:m(t,"bakePositionOffset")})),a.createElement(r,{name:"Scale",label:"Scale",className:"w-auto"},a.createElement(b,{value:n.bakeScale.value,onChange:u(t,"bakeScale"),onRelease:m(t,"bakeScale")})),a.createElement(r,{name:"Type",label:"Bake Type"},a.createElement(s,{options:[{label:"Baked",value:"Baked"},{label:"Realtime",value:"Realtime"}],key:e.entity,value:n.bakeType.value,onChange:m(t,"bakeType")})),a.createElement(r,{name:"Bake Resolution",label:"Bake Resolution"},a.createElement(s,{options:N.map(c=>({label:c.toString(),value:c})),key:e.entity,value:n.resolution.value,onChange:m(t,"resolution")})),a.createElement(r,{name:"Box Projection",label:"Box Projection"},a.createElement(k,{value:n.boxProjection.value,onChange:m(t,"boxProjection")})))};p.iconComponent=B;export{p as E,$ as a};
