import{r as I}from"./index-CBqU2yxZ.js";import{c as P,S as i,e as R,f as B,j as x,i as L,o as T,s as U,r as _}from"./index-_wFD3GG2.js";import{a as w,b as V}from"./MediaComponent-BbvQujMt.js";import{N as v,c as k,b as q}from"./ActionFunctions-CxzuxLxN.js";import{B as y,e as $,f as z,R as J,N as K}from"./EditorServices-BJKHmurs.js";import{m as Q,M as S,B as W,e as j,n as H}from"./three.module-D2RMN07C.js";const M=P({name:"PositionalAudioHelperComponent",schema:i.Object({name:i.String("positional-audio-helper"),audio:i.Type(),range:i.Number(1),divisionsInnerAngle:i.Number(16),divisionsOuterAngle:i.Number(2),divisions:i.Number(0),entity:i.Entity()}),onSet:(r,n,e)=>{if(e){if(!e.audio)throw new Error("PositionalAudioHelperComponent: Valid AudioNodeGroup required");n.audio.set(e.audio),typeof e.name=="string"&&n.name.set(e.name),typeof e.range=="number"&&n.range.set(e.range),typeof e.divisionsInnerAngle=="number"&&n.divisionsInnerAngle.set(e.divisionsInnerAngle),typeof e.divisionsOuterAngle=="number"&&n.divisionsOuterAngle.set(e.divisionsOuterAngle),n.divisions.set(n.divisionsInnerAngle.value+n.divisionsOuterAngle.value*2)}},reactor:function(){const r=R(),n=B(r,M),e=()=>{const a=new W,u=new Float32Array((n.divisions.value*3+3)*3);return a.setAttribute("position",new j(u,3)),a},[o]=y(e,r),[t]=y(()=>new H({color:65280}),r),[c]=y(()=>new H({color:16776960}),r),[N]=$(Q,r,o.value,[c.value,t.value]);return z(r,n,N),x(()=>{n.divisions.set(n.divisionsInnerAngle.value+n.divisionsOuterAngle.value*2)},[n.divisionsInnerAngle,n.divisionsOuterAngle]),x(()=>{o.set(e()),N.geometry=o.get(v)},[n.divisions]),I.useEffect(()=>{const a=n.audio.value;if(!a.panner)return;const u=n.range.value,F=n.divisionsInnerAngle.value,C=n.divisionsOuterAngle.value,A=o.get(v),X=[c.get(v),t.get(v)],h=S.degToRad(a.panner.coneInnerAngle),D=S.degToRad(a.panner.coneOuterAngle),g=h/2,E=D/2;let m=0,l=0,s,f;const d=A.attributes.position;A.clearGroups();function b(G,p,Y,Z){const O=(p-G)/Y;for(d.setXYZ(m,0,0,0),l++,s=G;s<p;s+=O)f=m+l,d.setXYZ(f,Math.sin(s)*u,0,Math.cos(s)*u),d.setXYZ(f+1,Math.sin(Math.min(s+O,p))*u,0,Math.cos(Math.min(s+O,p))*u),d.setXYZ(f+2,0,0,0),l+=3;A.addGroup(m,l,Z),m+=l,l=0}b(-E,-g,C,0),b(-g,g,F,1),b(g,E,C,0),d.needsUpdate=!0,h===D&&(X[0].visible=!1)},[n.audio,n.range,n.divisions]),null}}),ee=i.LiteralUnion(["exponential","inverse","linear"],"inverse"),ne=P({name:"EE_positionalAudio",jsonID:"EE_audio",schema:i.Object({distanceModel:ee,rolloffFactor:i.Number(3),refDistance:i.Number(1),maxDistance:i.Number(40),coneInnerAngle:i.Number(360),coneOuterAngle:i.Number(0),coneOuterGain:i.Number(0)}),reactor:function(){const r=R(),n=k(q(J).nodeHelperVisibility),e=B(r,ne),o=L(r,V);return I.useEffect(()=>{if(n.value){if(!o||!o.element.value)return;const t=w.get(o.element.value);if(!t)return;const c=T(r,K);U(r,M,{audio:t,name:c?`${c}-positional-audio-helper`:void 0})}return()=>{_(r,M)}},[n,o==null?void 0:o.element]),I.useEffect(()=>{if(!(o!=null&&o.element.value))return;const t=w.get(o.element.value);t!=null&&t.panner&&(t.panner.refDistance=e.refDistance.value,t.panner.rolloffFactor=e.rolloffFactor.value,t.panner.maxDistance=e.maxDistance.value,t.panner.distanceModel=e.distanceModel.value,t.panner.coneInnerAngle=e.coneInnerAngle.value,t.panner.coneOuterAngle=e.coneOuterAngle.value,t.panner.coneOuterGain=e.coneOuterGain.value)},[e.refDistance,e.rolloffFactor,e.maxDistance,e.distanceModel,e.coneInnerAngle,e.coneOuterAngle,e.coneOuterGain]),null}});export{ne as P};
